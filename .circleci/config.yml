version: 2.1
orbs:
  # orgs contain basc recipes and reproducible actions (install node, aws, etc.)
  node: circleci/node@5.0.3
  browser-tools: circleci/browser-tools@1.4.0
  eb: circleci/aws-elastic-beanstalk@2.0.1
  aws-cli: circleci/aws-cli@3.1.3
  # different jobs are calles later in the workflows sections
jobs:
  build:
    docker:
      # the base image can run most needed actions with orbs
      - image: "cimg/node:14.15-browsers"
    steps:
      # install node and checkout code
      - node/install:
          node-version: '14.15'         
      - browser-tools/install-chrome
      # - browser-tools/install-chromedriver
      - checkout
      # Use root level package.json to install dependencies in the frontend app
      - run:
          name: Install Front-End Dependencies
          command: |
            echo "NODE --version" 
            echo $(node --version)
            echo "NPM --version" 
            echo $(npm --version)
            npm run frontend:install
      - run:
          name: Install API Dependencies
          command: |
            echo " Install dependencies in the the backend API  "
            npm run api:install
      - run:
          name: Front-End Lint
          command: |
            echo "Lint the frontend"
            npm run frontend:lint
      - run:
          name: Test Front-End
          command: |
            echo "testing front-end"
            npm run frontend:test
      #! e2e not working
      # - run:
      #     name: e2e testing
      #     command: |
      #       npm run frontend:e2e
      - run:
          name: Front-End Build
          command: |
            echo "Build the frontend app"
            npm run frontend:build
      - run:
          name: API Build
          command: |
            echo "Build the backend API"
            npm run api:build
  # deploy step will run only after manual approval
  deploy:
    docker:
      - image: "cimg/base:stable"
    steps:
      - node/install:
          node-version: '14.15' 
      - eb/setup
      - aws-cli/setup
      - checkout
      - run:
          name: deploy front-end
          command: |
            npm run frontend:deploy
      - run:
          name: deploy api
          command: |
            npm run api:deploy
workflows:
  udagram:
    jobs:
      - build
      - hold:
          filters:
            branches:
              only:
                - main
          type: approval
          requires:
            - build
      - deploy:
          requires:
            - hold
